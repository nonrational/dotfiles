[user]
  name = Alan Norton
  email = git@nonration.al
  signingkey = ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDmN/6GdgNQlyyp0FsEVmh3suhU8BCruvS8wxr1z4NCJzG9qQ7VWTwKzo94nc+Wm5FnA5AWt1d/WJWVZroJ1slIOLq0avmWFrhemt+Fk9L5afV3NwcJGZIdhSCZkuaLutkwwpPe9een3QATkCzX85Rg7LjPlzwtO3Sk480SJQnUkSfJY871S0risH5y8Ehm0kjoEx1j684j7lgrv8QmVmn1kJNLSIkhMASm+i36mCgaH7nI5Jqncp81DTUiOdh8I86zJViGQ0n6xQjzvrGrMTV6oyizUJcTuirduBKlESdiWeSH7TQt0xDFDM08tU3i5Eoz6sZaLtWlerA4Jkmv1Kd7GQyIP0K2ShzZBWtiJO31DTp7hpCdDY9o2ZlcX374YcJdZFp1eC5wbn2kLBB5f1/iJQeYWJwmhvM+BTRIvq0HIFdkIwAa2QBQnfAhv+M0wxu1HCAHh3I8mf1bGHJr6oJoTVsrT+/+zfYbU90SOm4sPgsVCzhZUo5QnXRca2MaeEQsrjnqnc8Uqn+NqeWxGc+jdlXkwpldkQGBSrOWAfL+CtMsAtxnQ2qKt6ZSGBL0y2NYvZb0XyLSoOPEHFtQEPe7BYWdK/V914ZGWg3kQSRy0w18/ng+3L5HRZl+6Gjz2dFoAkCwxmEwD2QsWC8NfnGDJ7sLTAMmgtxsnQ9ENDQS4w==
[github]
  user = nonrational
[include]
  path = ~/.local/.gitconfig
[includeIf "gitdir:~/wrk/**"]
  path = ~/wrk/.gitconfig
[gpg]
  format = ssh
[gpg "ssh"]
  program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"
[commit]
  gpgsign = true
[core]
  # Use custom `.gitignore` and `.gitattributes`
  attributesfile = ~/.gitattributes
  quotepath = false
  excludesfile = ~/.gitignore_global

  # Treat spaces before tabs and all kinds of trailing whitespace as an error
  # [default] trailing-space: looks for spaces at the end of a line
  # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
  whitespace = space-before-tab,-indent-with-non-tab,trailing-space

  # Make `git rebase` safer on macOS
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false

  # Prevent showing files whose names contain non-ASCII symbols as unversioned.
  # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
  precomposeunicode = false
[alias]
  opb = "!. ~/.githelpers && remote_origin_primary_branch"
  pb = "!. ~/.githelpers && remote_origin_primary_branch | sed 's|origin/||g'"

  pp = push
  pro = "!hub pr show || hub browse"

  bump = "commit --allow-empty -m'ci-bump'"
  buu = "branch --unset-upstream"

  bc = "branch --show-current"
  bmx = "!. ~/.githelpers && rename_branch_regex"
  bcp = "!git branch --show-current | pbcopy"

  ci = commit -v
  co = checkout

  wip = commit -v -m'wip'

  df = "diff --name-only"
  dfo = "!git df $(git opb)"
  dc = diff --cached

  f = "fetch --tags --force --prune"
  ri = "rebase -i"
  # use "primary branch" to play nice with origin/main and origin/master
  rio = "!git f && git rebase -i $(git opb)"
  mov = "branch -m"

  head = !git r -1
  hp = "!. ~/.githelpers && show_git_head"
  r = !GIT_NO_PAGER=1 git l -10
  ra = !git r --all
  l = "!. ~/.githelpers && pretty_git_log"
  la = !git l --all

  lb = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'
  b = "!. ~/.githelpers && pretty_git_branch"
  bs = "!. ~/.githelpers && pretty_git_branch_sorted"
  brr = branch --sort=-committerdate

  lt = "!git tag | sort -n -t. -k1,1 -k2,2 -k3,3"

  amend = commit --amend
  aa = add --all .
  st = status
  stp = status --porcelain

  up = "!git f && hub sync"

  modified = "!git ls-files --modified"
  deleted = "!git ls-files --deleted"
  untracked = "!git ls-files --others --exclude-standard"
  new = untracked

  # ignore untracked files in this specific repo
  is-it-just-me = "!$EDITOR .git/info/exclude"

  # ignore changes to files that are never going to be committed
  regard = update-index --no-assume-unchanged
  disregard = update-index --assume-unchanged
  dissed = !git ls-files -v | grep ^[a-z] || echo "None"

  broom = "!. ~/.githelpers && delete_remoteless_branches_interactive"
  spring-cleaning = "!. ~/.githelpers && delete_all_my_branches_interactive"

  nuke = "!git reset --hard HEAD && git clean -fd"

  aww = "!. ~/.githelpers && add_wildcard"
  uww = "!. ~/.githelpers && reset_wildcard"
  sww = "!. ~/.githelpers && switch_wildcard"

  yolo = !git commit --allow-empty -m \"$(curl -s https://whatthecommit.com/index.txt)\"
[status]
  relativePaths = true
[color]
  diff = auto
  status = auto
  branch = auto
  interactive = auto
  ui = true
  pager = true
[gist]
  browse = true
  private = true
[hub]
  protocol = https
  user = nonrational
[pull]
  rebase = true
[push]
  default = simple
  autoSetupRemote = true
[merge]
  log = true
  keepBackup = false;
  tool = smerge
  prompt = false
[mergetool "smerge"]
  cmd = smerge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  keepTemporaries = false
  trustExitCode = false
  keepBackup = false
  prompt = false
[gc]
  auto = 0
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true
  process = git-lfs filter-process
[diff]
  renameLimit = 999999
[rebase]
  instructionFormat = (%an <%ae>) %s


[advice]
  skippedCherryPicks = false
